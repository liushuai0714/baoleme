{"remainingRequest":"/Users/liushuai/Desktop/jingdong/node_modules/babel-loader/lib/index.js!/Users/liushuai/Desktop/jingdong/node_modules/eslint-loader/index.js??ref--14-0!/Users/liushuai/Desktop/jingdong/src/effects/addressEffects.js","dependencies":[{"path":"/Users/liushuai/Desktop/jingdong/src/effects/addressEffects.js","mtime":1678361638207},{"path":"/Users/liushuai/Desktop/jingdong/babel.config.js","mtime":1677648653010},{"path":"/Users/liushuai/Desktop/jingdong/node_modules/cache-loader/dist/cjs.js","mtime":1677648643805},{"path":"/Users/liushuai/Desktop/jingdong/node_modules/babel-loader/lib/index.js","mtime":1677648644634},{"path":"/Users/liushuai/Desktop/jingdong/node_modules/eslint-loader/index.js","mtime":1677648643957}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVhY3RpdmUsIHRvUmVmcyB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IGdldCB9IGZyb20gIi4uL3V0aWxzL3JlcXVlc3QiOwpleHBvcnQgY29uc3QgdXNlR2V0QWRkcmVzc0VmZmVjdCA9ICgpID0+IHsKICBjb25zdCBkYXRhID0gcmVhY3RpdmUoewogICAgbGlzdDogW10KICB9KTsKICBjb25zdCBnZXRBZGRyZXNzID0gYXN5bmMgKCkgPT4gewogICAgdmFyIF9yZXN1bHQkZGF0YTsKICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldCgnL2FwaS91c2VyL2FkZHJlc3MnKTsKICAgIGlmICgocmVzdWx0ID09PSBudWxsIHx8IHJlc3VsdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzdWx0LmVycm5vKSA9PT0gMCAmJiByZXN1bHQgIT09IG51bGwgJiYgcmVzdWx0ICE9PSB2b2lkIDAgJiYgKF9yZXN1bHQkZGF0YSA9IHJlc3VsdC5kYXRhKSAhPT0gbnVsbCAmJiBfcmVzdWx0JGRhdGEgIT09IHZvaWQgMCAmJiBfcmVzdWx0JGRhdGEubGVuZ3RoKSB7CiAgICAgIGRhdGEubGlzdCA9IHJlc3VsdC5kYXRhOwogICAgfQogIH07CiAgZ2V0QWRkcmVzcygpOwogIGNvbnN0IHsKICAgIGxpc3QKICB9ID0gdG9SZWZzKGRhdGEpOwogIHJldHVybiB7CiAgICBsaXN0CiAgfTsKfTs="},{"version":3,"names":["reactive","toRefs","get","useGetAddressEffect","data","list","getAddress","_result$data","result","errno","length"],"sources":["/Users/liushuai/Desktop/jingdong/src/effects/addressEffects.js"],"sourcesContent":["import { reactive, toRefs } from \"vue\";\nimport { get } from \"../utils/request\";\nexport const useGetAddressEffect = () => {\n    const data = reactive({ list: [] });\n    const getAddress = async () => {\n      const result = await get('/api/user/address');\n      if (result?.errno === 0 && result?.data?.length) {\n        data.list = result.data;\n      }\n    };\n    getAddress();\n    const { list } = toRefs(data);\n    return { list };\n  };"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,KAAK;AACtC,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACrC,MAAMC,IAAI,GAAGJ,QAAQ,CAAC;IAAEK,IAAI,EAAE;EAAG,CAAC,CAAC;EACnC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,YAAA;IAC7B,MAAMC,MAAM,GAAG,MAAMN,GAAG,CAAC,mBAAmB,CAAC;IAC7C,IAAI,CAAAM,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,KAAK,MAAK,CAAC,IAAID,MAAM,aAANA,MAAM,gBAAAD,YAAA,GAANC,MAAM,CAAEJ,IAAI,cAAAG,YAAA,eAAZA,YAAA,CAAcG,MAAM,EAAE;MAC/CN,IAAI,CAACC,IAAI,GAAGG,MAAM,CAACJ,IAAI;IACzB;EACF,CAAC;EACDE,UAAU,EAAE;EACZ,MAAM;IAAED;EAAK,CAAC,GAAGJ,MAAM,CAACG,IAAI,CAAC;EAC7B,OAAO;IAAEC;EAAK,CAAC;AACjB,CAAC"}]}